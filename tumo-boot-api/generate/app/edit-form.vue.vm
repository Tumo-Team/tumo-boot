##引入自定义全局变量
$!tumo-boot-define
##设置文件后缀名
$!callback.setFileName("EditForm.vue")

<template>
  <div v-if="visible">
    <!-- 新增/修改弹窗 - Begin -->
    <a-modal
        :title="form.id === undefined ? '新增' : '修改'"
        :visible.sync="visible"
        :confirm-loading="loading"
        :keyboard="false"
        :mask-closable="false"
        width="40%"
        :destroy-on-close="true"
        @ok="handleSubmit"
        @cancel="handleClose"
    >
      <a-form-model
          ref="form"
          :model="form"
          :rules="rules"
          :label-col="{ span: 3 }"
          :wrapper-col="{ span: 21 }"
      >
      #foreach($column in $tableInfo.otherColumn)
        <a-form-model-item has-feedback prop="$!{column.name}" label="账户">
          <a-input v-model="form.$!{column.name}" />
        </a-form-model-item>
      #end
      </a-form-model>
    </a-modal>
    <!-- 新增/修改弹窗 - End -->
  </div>

</template>

<script>
  ## api.js文件地址，请生成代码后自行修改
  import { findBy$!{TumoBootEntity}Id, add$!{TumoBootEntity}, update$!{TumoBootEntity}, check$!{TumoBootEntity}Name } from '@/api/$!{TumoBootLowerCaseEntity}'

  export default {
    name: 'EditForm',
    data() {
      ## 校验名称的方法，如果不需要请自行删除
      const validateName = (rule, value, callback) => {
        if (value === undefined || value.trim() === '') {
          callback(new Error('请输入名称'))
        } else {
          check$!{TumoBootEntity}Name(this.form).then(res => {
            if (!res.data) {
              callback('当前名称已存在')
            }
            callback()
          })
        }
      }
      return {
        visible: false,
        loading: false,
        form: {},
        rules: {
        #foreach($column in $tableInfo.otherColumn)
          $!{column.name}: [{ required: true, message: '请输入$!{column.comment}', trigger: 'blur' }],
        #end
        },
      }
    },
    methods: {
      handleClose() {
        this.visible = false
        this.loading = false
        this.form = {}
      },

      init(id) {
        if (id !== undefined) {
          // 修改操作
          findBy$!{TumoBootEntity}Id(id).then(res => {
            this.form = res.data
            this.visible = true
          })
        } else {
          this.visible = true
        }
      },

      handleSubmit() {
        this.loading = true
        this.$refs.form
            .validate(valid => {
            if (valid) {
                if (this.form.id === undefined || this.form.id === 0) {
                    // 新增
                    add$!{TumoBootEntity}(this.form).then(res => {
                        if (res.code === 200) {
                            this.$message.success('新增成功')
                            this.handleClose()
                            this.$emit('refresh')
                        }
                    })
                } else {
                    // 修改
                    update$!{TumoBootEntity}(this.form).then(res => {
                        if (res.code === 200) {
                            this.$message.success('修改成功')
                            this.handleClose()
                            this.$emit('refresh')
                        }
                    })
                }
            } else {
                this.loading = false
                this.$message.error('请填写表单内容')
                return false
            }
        })
      }
    }
  }
</script>

<style scoped>
</style>
